{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 HelveticaNeue-Italic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\vieww29740\viewh18600\viewkind0
\deftab720
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\fs24 \cf0 \
Voting Application\
\
\pard\pardeftab720\sa213\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
This project implements a distributed voting application using Java Remote Method Invocation (RMI). \
Clients can connect to the server, cast votes among 3 choices, and then request the voting results. The system uses a ticketing mechanism to ensure that only voting clients can view the voting results.\
\

\f1\b Structure
\f0\b0 \
The project consists of the following main components:\
\pard\pardeftab720\li960\fi-960\partightenfactor0
\cf0 \'b7\'a0\'a0\'a0\'a0\'a0 CastVote.java: The remote interface defines the methods available for remote invocation.\
\'b7\'a0\'a0\'a0\'a0\'a0 VoteImpl.java: The implementation of the CastVote interface, handling the voting logic.\
\'b7\'a0\'a0\'a0\'a0\'a0 Server.java: Sets up the RMI environment, creates an instance of VoteImpl, and registers it with the RMI registry.\
\pard\pardeftab720\li960\fi-960\sa213\partightenfactor0
\cf0 \'b7\'a0\'a0\'a0\'a0\'a0 Client.java: Connects to the RMI server, requests a voting ticket, submits votes, and retrieves voting results.\
\kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f1\b \cf0 Compilation
\f0\b0 \
1. Navigate to the `server` directory.\
2. Compile the server-side classes:\
  
\f2\i  javac Server.java VoteImpl.java CastVote.java
\f0\i0 \
3. Navigate to the `client` directory.\
4. Compile the client-side class:\
 
\f2\i   javac Client.java CastVote.java
\f0\i0 \
\

\f1\b Running the Application
\f0\b0 \
Start the RMI Registry\
First, start the RMI registry in a separate terminal window:\

\f2\i rmiregistry
\f0\i0 \
\

\f1\b Start the Server
\f0\b0 \
1. Navigate to the `server` directory.\
2. Run the server:\
   java Server\
\

\f1\b Run the Client
\f0\b0 \
1. Open a new terminal window.\
2. Navigate to the `client` directory.\
3. Run the client:\
   java Client\
\
Follow the prompts in the client application to vote and view the voting results.\
}